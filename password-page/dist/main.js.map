{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/ami/account-credentials/account-credentials.component.html","webpack:///./src/app/ami/account-credentials/account-credentials.component.scss","webpack:///./src/app/ami/account-credentials/account-credentials.component.ts","webpack:///./src/app/ami/ami.component.html","webpack:///./src/app/ami/ami.component.scss","webpack:///./src/app/ami/ami.component.ts","webpack:///./src/app/ami/instance-id/instance-id.component.html","webpack:///./src/app/ami/instance-id/instance-id.component.scss","webpack:///./src/app/ami/instance-id/instance-id.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.router.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/docker-page/docker-page.component.html","webpack:///./src/app/docker-page/docker-page.component.scss","webpack:///./src/app/docker-page/docker-page.component.ts","webpack:///./src/app/guards/ami.guard.ts","webpack:///./src/app/guards/docker.guard.ts","webpack:///./src/app/guards/main.guard.ts","webpack:///./src/app/guards/ovf.guard.ts","webpack:///./src/app/guards/success-page.guard.ts","webpack:///./src/app/ovf/account-credentials-ovf/account-credentials-ovf.component.html","webpack:///./src/app/ovf/account-credentials-ovf/account-credentials-ovf.component.scss","webpack:///./src/app/ovf/account-credentials-ovf/account-credentials-ovf.component.ts","webpack:///./src/app/ovf/ovf.component.html","webpack:///./src/app/ovf/ovf.component.scss","webpack:///./src/app/ovf/ovf.component.ts","webpack:///./src/app/success-page/success-page.component.html","webpack:///./src/app/success-page/success-page.component.scss","webpack:///./src/app/success-page/success-page.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,4dAA4d,mBAAmB,4hBAA4hB,gBAAgB,sOAAsO,mBAAmB,yzBAAyzB,0BAA0B,w/B;;;;;;;;;;;ACAvmE,wCAAwC,wBAAwB,EAAE,iBAAiB,wBAAwB,wBAAwB,qBAAqB,sBAAsB,EAAE,6BAA6B,iBAAiB,wBAAwB,qBAAqB,qBAAqB,8BAA8B,8BAA8B,EAAE,wDAAwD,qBAAqB,wBAAwB,oBAAoB,EAAE,mDAAmD,qBAAqB,wBAAwB,oBAAoB,EAAE,oDAAoD,qBAAqB,wBAAwB,oBAAoB,EAAE,0CAA0C,qBAAqB,wBAAwB,oBAAoB,EAAE,iBAAiB,wBAAwB,qBAAqB,EAAE,wBAAwB,iBAAiB,qBAAqB,kBAAkB,wBAAwB,iBAAiB,kCAAkC,oBAAoB,8BAA8B,EAAE,8BAA8B,8BAA8B,iBAAiB,qBAAqB,EAAE,0DAA0D,qBAAqB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7sC;AACD;AACM;AAO/C;IAiBI,wCAAoB,MAAc,EAAS,UAAsB;QAA7C,WAAM,GAAN,MAAM,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAY;QAhB1D,gBAAW,GAAG;YACjB,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;SACf,CAAC;QAEK,WAAM,GAAG;YACZ,QAAQ,EAAE,UAAU;YACpB,QAAQ,EAAE,UAAU;YACpB,eAAe,EAAE,gBAAgB;SACpC,CAAC;QAKK,gBAAW,GAAG,KAAK,CAAC;IAG3B,CAAC;IAED;;;;OAIG;IACH,8CAAK,GAAL,UAAM,KAAU,EAAE,KAAa;QAC3B,QAAO,KAAK,EAAE;YACV,KAAK,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACvB,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;gBACtD,MAAM;aACT;YAED,KAAK,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACvB,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;gBACtD,MAAM;aACT;YAED,KAAK,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;gBAC9B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;gBAChD,MAAM;aACT;SACJ;QACD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACI,yDAAgB,GAAvB;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,KAAK,IAAI,CAAC,cAAc,CAAC;IACzE,CAAC;IAED;;;OAGG;IACI,+CAAM,GAAb,UAAc,OAAO;QAArB,iBAUC;QATG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YAAE,OAAO,KAAK,CAAC;SAAE;QACxC,IAAI,OAAO;YAAE,OAAO;QACpB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC;YACjD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC,KAAK,CAAE,UAAC,GAAG;YACV,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC;QAC3E,CAAC,CAAC,CAAC;IACP,CAAC;IAnEQ,8BAA8B;QAL1C,+DAAS,CAAC;YACP,QAAQ,EAAE,yBAAyB;;;SAGtC,CAAC;yCAkB8B,sDAAM,EAAqB,uDAAU;OAjBxD,8BAA8B,CAoE1C;IAAD,qCAAC;CAAA;AApE0C;;;;;;;;;;;;ACT3C,4jD;;;;;;;;;;;ACAA,wBAAwB,8BAA8B,EAAE,aAAa,iBAAiB,wBAAwB,mBAAmB,8BAA8B,EAAE,iBAAiB,oBAAoB,EAAE,wBAAwB,kBAAkB,wBAAwB,EAAE,eAAe,qBAAqB,EAAE,2BAA2B,+CAA+C,EAAE,0BAA0B,gBAAgB,iBAAiB,EAAE,aAAa,qBAAqB,mBAAmB,wBAAwB,EAAE,qBAAqB,iBAAiB,eAAe,cAAc,EAAE,iCAAiC,qCAAqC,EAAE,6OAA6O,2BAA2B,mBAAmB,kCAAkC,iBAAiB,iBAAiB,qBAAqB,0BAA0B,EAAE,wBAAwB,sBAAsB,yBAAyB,8BAA8B,8BAA8B,EAAE,0CAA0C,aAAa,sBAAsB,EAAE,kBAAkB,wBAAwB,2BAA2B,EAAE,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACA1xC;AAO1C;IAEE;IAAgB,CAAC;IAFN,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;;OACW,2BAA2B,CAGvC;IAAD,kCAAC;CAAA;AAHuC;;;;;;;;;;;;ACPxC,88BAA88B,qjBAAqjB,gBAAgB,6kD;;;;;;;;;;;ACAnhD,2BAA2B,6BAA6B,EAAE,0BAA0B,wBAAwB,EAAE,iBAAiB,wBAAwB,wBAAwB,qBAAqB,sBAAsB,EAAE,6BAA6B,iBAAiB,wBAAwB,qBAAqB,qBAAqB,8BAA8B,8BAA8B,EAAE,wDAAwD,qBAAqB,wBAAwB,oBAAoB,EAAE,mDAAmD,qBAAqB,wBAAwB,oBAAoB,EAAE,oDAAoD,qBAAqB,wBAAwB,oBAAoB,EAAE,0CAA0C,qBAAqB,wBAAwB,oBAAoB,EAAE,iBAAiB,iBAAiB,qBAAqB,EAAE,iBAAiB,mBAAmB,oBAAoB,0BAA0B,EAAE,uBAAuB,mBAAmB,+BAA+B,EAAE,wBAAwB,iBAAiB,qBAAqB,kBAAkB,wBAAwB,iBAAiB,kCAAkC,oBAAoB,8BAA8B,EAAE,8BAA8B,8BAA8B,iBAAiB,qBAAqB,EAAE,0DAA0D,qBAAqB,EAAE,eAAe,oBAAoB,WAAW,YAAY,gBAAgB,kBAAkB,yCAAyC,kBAAkB,EAAE,mBAAmB,qBAAqB,gBAAgB,iBAAiB,EAAE,qBAAqB,iBAAiB,wBAAwB,qBAAqB,8BAA8B,EAAE,uBAAuB,mBAAmB,EAAE,wDAAwD,wBAAwB,EAAE,iCAAiC,oBAAoB,oBAAoB,EAAE,gCAAgC,8CAA8C,2BAA2B,EAAE,2CAA2C,kBAAkB,mCAAmC,EAAE,+CAA+C,kBAAkB,4BAA4B,wBAAwB,oBAAoB,iBAAiB,iBAAiB,eAAe,wBAAwB,qBAAqB,kBAAkB,8BAA8B,kCAAkC,iBAAiB,EAAE,qDAAqD,8BAA8B,iBAAiB,qBAAqB,EAAE,2CAA2C,iBAAiB,qBAAqB,0BAA0B,EAAE,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACAprF;AACD;AACM;AAO/C;IAMI,gCAAoB,MAAc,EAAS,UAAsB;QAA7C,WAAM,GAAN,MAAM,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAY;QAL1D,eAAU,GAAG,EAAE,CAAC;QAChB,gBAAW,GAAG,KAAK,CAAC;QAEpB,gBAAW,GAAG,KAAK,CAAC;IAG3B,CAAC;IAED;;OAEG;IACI,4CAAW,GAAlB;QACI,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;IACzC,CAAC;IAED;;;OAGG;IACH,sCAAK,GAAL,UAAM,KAAU;QACZ,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACI,uCAAM,GAAb,UAAc,OAAO;QAArB,iBAQC;QAPG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,OAAO;YAAE,OAAO;QACpB,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;YAClD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC,KAAK,CAAE,UAAC,GAAG;YACV,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC;QAC3E,CAAC,CAAC,CAAC;IACP,CAAC;IArCQ,sBAAsB;QALlC,+DAAS,CAAC;YACP,QAAQ,EAAE,iBAAiB;;;SAG9B,CAAC;yCAO8B,sDAAM,EAAqB,uDAAU;OANxD,sBAAsB,CAsClC;IAAD,6BAAC;CAAA;AAtCkC;;;;;;;;;;;;ACTnC,oD;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IACE;QACA,UAAK,GAAG,KAAK,CAAC;IADE,CAAC;IADN,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,YAAY,CAGxB;IAAD,mBAAC;CAAA;AAHwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACF;AACf;AACA;AACM;AACF;AAEE;AACmB;AACZ;AAC2B;AACwB;AACW;AACpC;AACb;AACrB;AACH;AACK;AAC6B;AACd;AACX;AAyBpD;IAAA;IACA,CAAC;IADY,SAAS;QAvBrB,8DAAQ,CAAC;YACN,YAAY,EAAE;gBACV,2DAAY;gBACZ,8EAA2B;gBAC3B,6FAAsB;gBACtB,sHAA8B;gBAC9B,kEAAe;gBACf,iIAAiC;gBACjC,6FAAuB;gBACvB,0FAAsB;aACzB;YACD,OAAO,EAAE;gBACL,uEAAa;gBACb,qEAAgB;gBAChB,4DAAY,CAAC,OAAO,CAAC,qDAAS,CAAC;gBAC/B,0DAAW;aACd;YACD,OAAO,EAAE;gBACL,2DAAY;aACf;YACD,SAAS,EAAE,CAAC,6DAAS,EAAE,2DAAQ,EAAE,sEAAmB,EAAE,2DAAQ,EAAE,4EAAgB,EAAE,iEAAW,EAAE,wDAAU,CAAC;YAC1G,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC5B,CAAC;OACW,SAAS,CACrB;IAAD,gBAAC;CAAA;AADqB;;;;;;;;;;;;;AC5CtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkE;AACe;AACwB;AACnD;AAC8D;AACpC;AACb;AACrB;AACC;AACC;AAC6B;AACd;AACX;AAE7C,IAAM,SAAS,GAAW;IAC7B,EAAE,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE;YACd;gBACI,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,2DAAY,EAAE,WAAW,EAAE,CAAC,4DAAS,CAAC;aACpD;YACD;gBACI,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,kEAAe,EAAE,WAAW,EAAE,CAAC,0DAAQ,CAAC,EAAE,QAAQ,EAAE;oBACxE,EAAE,IAAI,EAAE,yBAAyB,EAAE,SAAS,EAAE,gIAAiC,EAAE;oBACjF,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,yBAAyB,EAAE,SAAS,EAAE,MAAM,EAAE;iBACzE;aACJ;YACD;gBACI,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,8EAA2B,EAAE,WAAW,EAAE,CAAC,0DAAQ,CAAC,EAAE,QAAQ,EAAE;oBACpF,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,6FAAsB,EAAE;oBAC1D,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,qHAA8B,EAAE,WAAW,EAAE,CAAC,qEAAmB,CAAC,EAAE;oBAC9G,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,EAAE;iBAC7D;aACJ;SACJ;KACJ;IACD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,0FAAsB,EAAE,WAAW,EAAE,CAAC,iEAAW,CAAC,EAAE;IACjF,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,4FAAuB,EAAE,WAAW,EAAE,CAAC,4EAAgB,CAAC,EAAE;CAChG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCyC;AACQ;AACD;AASlD;IASI,oBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAR5B,YAAO,GAAG,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAClE,QAAG,GAAG,wBAAwB,CAAC;QAC/B,gBAAW,GAAG,iCAAiC,CAAC;QAChD,WAAM,GAAG,yBAAyB,CAAC;QACnC,SAAI,GAAQ,EAAE,CAAC;QACvB,uBAAkB,GAAG,KAAK,CAAC;QAC3B,4BAAuB,GAAG,KAAK,CAAC;IAGhC,CAAC;IAED;;;OAGG;IACI,2CAAsB,GAA7B;QACI,OAAO,IAAI,CAAC,uBAAuB,CAAC;IACxC,CAAC;IAED;;;OAGG;IACI,sCAAiB,GAAxB;QACI,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACnC,CAAC;IAED;;;;OAIG;IACH,kCAAa,GAAb,UAAc,WAA4B;QAA1C,iBAQC;QAPG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;QAE1C,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aACpD,SAAS,EAAE;aACX,IAAI,CAAC,cAAM,YAAI,CAAC,uBAAuB,GAAG,IAAI,EAAnC,CAAmC,CAAC,CAAC;IACzD,CAAC;IAED;;;;OAIG;IACH,oCAAe,GAAf,UAAgB,UAAkB;QAAlC,iBAMC;QALG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAChC,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,UAAU,cAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aACjE,SAAS,EAAE;aACX,IAAI,CAAC,cAAM,YAAI,CAAC,kBAAkB,GAAG,IAAI,EAA9B,CAA8B,CAAC,CAAC;IACpD,CAAC;IAED;;;;OAIG;IACH,6BAAQ,GAAR,UAAS,GAAW;QAChB,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aAC1D,SAAS,EAAE,CAAC;IACrB,CAAC;IAjEQ,UAAU;QADtB,gEAAU,EAAE;yCAUiB,+DAAU;OAT3B,UAAU,CAmEtB;IAAD,iBAAC;CAAA;AAnEsB;;;;;;;;;;;;ACXvB,05B;;;;;;;;;;;ACAA,2BAA2B,iBAAiB,wBAAwB,mBAAmB,8BAA8B,EAAE,iBAAiB,oBAAoB,EAAE,wBAAwB,kBAAkB,wBAAwB,EAAE,eAAe,qBAAqB,EAAE,2BAA2B,+CAA+C,EAAE,0BAA0B,gBAAgB,iBAAiB,EAAE,OAAO,wBAAwB,sBAAsB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACA9Z;AAO1C;IAEE;IAAgB,CAAC;IAFN,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;;OACW,sBAAsB,CAGlC;IAAD,6BAAC;CAAA;AAHkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFQ;AACC;AACiB;AAE7D;IAGI;QAFA,sBAAiB,GAAG,KAAK,CAAC;IAEV,CAAC;IAEjB;;OAEG;IACH,8BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,OAAO,qEAAW,CAAC,gBAAgB,KAAK,IAAI,CAAC,iBAAiB,CAAC;IACnE,CAAC;IACL,eAAC;AAAD,CAAC;;AAGD;IACI,6BAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAC1C,CAAC;IAED;;OAEG;IACH,yCAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,OAAO,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC;IAC/C,CAAC;IATQ,mBAAmB;QAD/B,gEAAU,EAAE;yCAEuB,uDAAU;OADjC,mBAAmB,CAU/B;IAAD,0BAAC;CAAA;AAV+B;;;;;;;;;;;;;AClBhC;AAAA;AAAA;AAA6D;AAE7D;IAGI;QAFA,sBAAiB,GAAG,QAAQ,CAAC;IAEb,CAAC;IAEjB;;OAEG;IACH,iCAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,OAAO,qEAAW,CAAC,gBAAgB,KAAK,IAAI,CAAC,iBAAiB,CAAC;IACnE,CAAC;IACL,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbwB;AACkB;AACkB;AAE7D,IAAK,YAIJ;AAJD,WAAK,YAAY;IACb,2BAAW;IACX,2BAAW;IACX,iCAAiB;AACrB,CAAC,EAJI,YAAY,KAAZ,YAAY,QAIhB;AAGD;IAEI,mBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,+BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,QAAQ,qEAAW,CAAC,gBAAgB,EAAE;YAClC,KAAK,YAAY,CAAC,GAAG;gBACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC9B,MAAM;YACV,KAAK,YAAY,CAAC,GAAG;gBACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC9B,MAAM;YACV,KAAK,YAAY,CAAC,MAAM;gBACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACjC,MAAM;SACb;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAlBQ,SAAS;QADrB,gEAAU,EAAE;yCAGmB,sDAAM;OAFzB,SAAS,CAmBrB;IAAD,gBAAC;CAAA;AAnBqB;;;;;;;;;;;;;ACXtB;AAAA;AAAA;AAA6D;AAE7D;IAGI;QAFA,sBAAiB,GAAG,KAAK,CAAC;IAEV,CAAC;IAEjB;;OAEG;IACH,8BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,OAAO,qEAAW,CAAC,gBAAgB,KAAK,IAAI,CAAC,iBAAiB,CAAC;IACnE,CAAC;IACL,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACb2C;AACD;AAG3C;IACI,0BAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE/C;;OAEG;IACH,sCAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,OAAO,IAAI,CAAC,UAAU,CAAC,sBAAsB,EAAE,CAAC;IACpD,CAAC;IARQ,gBAAgB;QAD5B,gEAAU,EAAE;yCAEuB,uDAAU;OADjC,gBAAgB,CAS5B;IAAD,uBAAC;CAAA;AAT4B;;;;;;;;;;;;ACT7B,gjBAAgjB,qBAAqB,8hBAA8hB,gBAAgB,uSAAuS,uBAAuB,43BAA43B,8BAA8B,y5BAAy5B,kBAAkB,yXAAyX,mBAAmB,qb;;;;;;;;;;;ACAloH,wCAAwC,wBAAwB,EAAE,iBAAiB,wBAAwB,iBAAiB,qBAAqB,sBAAsB,EAAE,6BAA6B,iBAAiB,iBAAiB,qBAAqB,qBAAqB,8BAA8B,8BAA8B,EAAE,wDAAwD,qBAAqB,iBAAiB,oBAAoB,EAAE,mDAAmD,qBAAqB,iBAAiB,oBAAoB,EAAE,oDAAoD,qBAAqB,iBAAiB,oBAAoB,EAAE,0CAA0C,qBAAqB,iBAAiB,oBAAoB,EAAE,6BAA6B,qBAAqB,wBAAwB,EAAE,qBAAqB,kBAAkB,wBAAwB,EAAE,iBAAiB,qBAAqB,iBAAiB,EAAE,oBAAoB,oBAAoB,iBAAiB,EAAE,wBAAwB,iBAAiB,qBAAqB,kBAAkB,iBAAiB,iBAAiB,kCAAkC,oBAAoB,8BAA8B,EAAE,8BAA8B,8BAA8B,iBAAiB,qBAAqB,EAAE,2CAA2C,qBAAqB,oBAAoB,qCAAqC,8BAA8B,kCAAkC,EAAE,oBAAoB,yBAAyB,EAAE,yBAAyB,qBAAqB,0BAA0B,EAAE,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlkD;AACD;AACM;AAO/C;IAoBI,2CAAoB,MAAc,EAAS,UAAsB;QAA7C,WAAM,GAAN,MAAM,CAAQ;QAAS,eAAU,GAAV,UAAU,CAAY;QAnB1D,gBAAW,GAAG;YACjB,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;SACf,CAAC;QAEK,WAAM,GAAG;YACZ,YAAY,EAAE,aAAa;YAC3B,YAAY,EAAE,aAAa;YAC3B,mBAAmB,EAAE,mBAAmB;YACxC,OAAO,EAAE,KAAK;SACjB,CAAC;QAEK,QAAG,GAAG,EAAE,CAAC;QACT,mBAAc,GAAG,EAAE,CAAC;QAIpB,gBAAW,GAAG,KAAK,CAAC;IAG3B,CAAC;IAED;;;;OAIG;IACH,iDAAK,GAAL,UAAM,KAAU,EAAE,KAAa;QAC3B,QAAO,KAAK,EAAE;YACV,KAAK,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAC3B,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;gBACtD,MAAM;aACT;YAED,KAAK,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBAC3B,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;gBACtD,MAAM;aACT;YAED,KAAK,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;gBAClC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;gBAChD,MAAM;aACT;YAED,KAAK,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACtB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;gBACrC,MAAM;aACT;SACJ;QACD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACI,4DAAgB,GAAvB;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,KAAK,IAAI,CAAC,cAAc,CAAC;IACzE,CAAC;IAED;;;OAGG;IACI,kDAAM,GAAb,UAAc,OAAO;QAArB,iBAaC;QAZG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACnB,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,OAAO;YAAE,OAAO;QACpB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC;YACjD,IAAI,KAAI,CAAC,GAAG,IAAI,KAAI,CAAC,GAAG,CAAC,MAAM;gBAAE,OAAO,KAAI,CAAC,QAAQ,EAAE,CAAC;;gBACnD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;YACT,KAAI,CAAC,eAAe,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC;QAC9E,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,oDAAQ,GAAhB;QAAA,iBAIC;QAHG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;aAC7B,IAAI,CAAC,cAAM,YAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,EAAtC,CAAsC,CAAC;aAClD,KAAK,CAAC,UAAC,GAAG,IAAK,YAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,EAAtE,CAAsE,CAAC,CAAC;IAChG,CAAC;IApFQ,iCAAiC;QAL7C,+DAAS,CAAC;YACP,QAAQ,EAAE,6BAA6B;;;SAG1C,CAAC;yCAqB8B,sDAAM,EAAqB,uDAAU;OApBxD,iCAAiC,CAqF7C;IAAD,wCAAC;CAAA;AArF6C;;;;;;;;;;;;ACT9C,+mC;;;;;;;;;;;ACAA,wBAAwB,8BAA8B,EAAE,aAAa,iBAAiB,wBAAwB,mBAAmB,8BAA8B,EAAE,iBAAiB,oBAAoB,EAAE,wBAAwB,kBAAkB,wBAAwB,EAAE,eAAe,qBAAqB,EAAE,2BAA2B,+CAA+C,EAAE,0BAA0B,gBAAgB,iBAAiB,EAAE,WAAW,oBAAoB,EAAE,aAAa,qBAAqB,wBAAwB,wBAAwB,EAAE,qBAAqB,iBAAiB,eAAe,cAAc,EAAE,iCAAiC,qCAAqC,EAAE,6OAA6O,kCAAkC,iBAAiB,iBAAiB,qBAAqB,0BAA0B,EAAE,8BAA8B,wBAAwB,EAAE,wBAAwB,sBAAsB,yBAAyB,8BAA8B,8BAA8B,EAAE,0CAA0C,aAAa,sBAAsB,EAAE,kBAAkB,wBAAwB,2BAA2B,EAAE,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACA10C;AAO1C;IAEE;IAAgB,CAAC;IAFN,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;;SAGpB,CAAC;;OACW,eAAe,CAG3B;IAAD,sBAAC;CAAA;AAH2B;;;;;;;;;;;;ACP5B,knB;;;;;;;;;;;ACAA,2BAA2B,iBAAiB,wBAAwB,mBAAmB,8BAA8B,EAAE,iBAAiB,oBAAoB,EAAE,wBAAwB,kBAAkB,wBAAwB,EAAE,eAAe,qBAAqB,EAAE,2BAA2B,+CAA+C,EAAE,0BAA0B,gBAAgB,gBAAgB,iBAAiB,mBAAmB,8CAA8C,2BAA2B,EAAE,OAAO,wBAAwB,sBAAsB,EAAE,SAAS,oBAAoB,EAAE,gBAAgB,mBAAmB,EAAE,sBAAsB,mBAAmB,+BAA+B,EAAE,iBAAiB,mBAAmB,mDAAmD,2CAA2C,EAAE,6BAA6B,QAAQ,sCAAsC,8BAA8B,EAAE,UAAU,wCAAwC,gCAAgC,EAAE,EAAE,qBAAqB,QAAQ,sCAAsC,8BAA8B,EAAE,UAAU,wCAAwC,gCAAgC,EAAE,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;ACA9oC;AACT;AAOzC;IAEI,iCAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,0CAAQ,GAAR;QACI,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAED;;OAEG;IACH,sCAAI,GAAJ;QACI,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAEM,oDAAkB,GAAzB;QAAA,iBAIC;QAHG,UAAU,CAAC;YACT,KAAI,CAAC,IAAI,EAAE,CAAC;QACd,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IAnBQ,uBAAuB;QALnC,+DAAS,CAAC;YACP,QAAQ,EAAE,kBAAkB;;;SAG/B,CAAC;yCAG8B,sDAAM;OAFzB,uBAAuB,CAoBnC;IAAD,8BAAC;CAAA;AApBmC;;;;;;;;;;;;;ACRpC;AAAA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACvB,UAAU,EAAE,KAAK;IACjB,gBAAgB,EAAE,QAAQ;CAC7B,CAAC;;;;;;;;;;;;;ACRF;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"tab-pane\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <p>Create your username and password to access your PMM</p>\\n  </div>\\n  <form>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xl-8 col-10 offset-xl-2 offset-1 input-wrapper\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12 text-right\\\">\\n            <input type=\\\"text\\\" class=\\\"custom-form-input form-control\\\" placeholder=\\\"Username\\\"\\n                   name=\\\"{{ fields.USERNAME }}\\\"\\n                   [(ngModel)]=\\\"amiUserData.username\\\"\\n                   #user=\\\"ngModel\\\"\\n                   (keyup)=\\\"onKey($event, fields.USERNAME)\\\"\\n                   required>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div *ngIf=\\\"user?.errors && isSubmitted\\\"\\n               class=\\\"col-xl-9 col-12 error-text\\\">\\n            <div *ngIf=\\\"user?.errors?.required\\\">*Field is required</div>\\n          </div>\\n            <div *ngIf=\\\"errorMessage\\\" class=\\\"error-text col-xl-9 col-xs-12\\\">*{{ errorMessage }}</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12 text-right\\\">\\n            <input type=\\\"password\\\" class=\\\"custom-form-input form-control\\\" placeholder=\\\"Password\\\"\\n                   name=\\\"{{ fields.PASSWORD }}\\\"\\n                   [(ngModel)]=\\\"amiUserData.password\\\"\\n                   #pass=\\\"ngModel\\\"\\n                   (keyup)=\\\"onKey($event, fields.PASSWORD)\\\"\\n                   maxlength=\\\"255\\\"\\n                   required>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div *ngIf=\\\"pass?.errors && isSubmitted\\\"\\n               class=\\\"col-xl-9 col-12 error-text\\\">\\n            <div *ngIf=\\\"pass?.errors?.required\\\">*Field is required</div>\\n            <div *ngIf=\\\"pass?.errors?.maxlength\\\">*Field can not me more than 255 characters</div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12 text-right\\\">\\n            <input type=\\\"password\\\" class=\\\"custom-form-input form-control\\\" placeholder=\\\"Repeat Password\\\"\\n                   name=\\\"{{ fields.REPEAT_PASSWORD }}\\\"\\n                   [(ngModel)]=\\\"repeatPassword\\\"\\n                   #repeatpass=\\\"ngModel\\\"\\n                   (keyup)=\\\"onKey($event, fields.REPEAT_PASSWORD)\\\"\\n                   required>\\n          </div>\\n        </div>\\n        <div class=\\\"row error-text\\\">\\n          <div *ngIf=\\\"repeatpass?.errors && isSubmitted\\\"\\n               class=\\\"col-xl-9 col-12\\\">\\n            <div *ngIf=\\\"repeatpass?.errors?.required\\\">*Field is required</div>\\n          </div>\\n          <div *ngIf=\\\"!isIdentical && isSubmitted\\\" class=\\\"col-xl-9 col-12\\\">*Passwords must be identical</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12 text-right button-row\\\">\\n            <button class=\\\"btn btn-primary\\\" type=\\\"reset\\\">Reset</button>\\n            <button class=\\\"btn btn-primary\\\"\\n                    (click)=\\\"submit(!user?.valid || !pass?.valid || !repeatpass?.valid)\\\">Submit\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","module.exports = \".input-wrapper > div {\\n  margin-bottom: 15px; }\\n\\n.tab-pane p {\\n  margin-bottom: 25px;\\n  color: var(--white);\\n  font-weight: 300;\\n  font-size: 0.9rem; }\\n\\ninput.custom-form-input {\\n  height: 38px;\\n  color: var(--white);\\n  font-weight: 300;\\n  border-radius: 0;\\n  border: 1px solid #2a2a2a;\\n  background-color: #292929; }\\n\\ninput.custom-form-input::-webkit-input-placeholder {\\n  font-weight: 100;\\n  color: var(--white);\\n  font-size: 12px; }\\n\\ninput.custom-form-input:-ms-input-placeholder {\\n  font-weight: 100;\\n  color: var(--white);\\n  font-size: 12px; }\\n\\ninput.custom-form-input::-ms-input-placeholder {\\n  font-weight: 100;\\n  color: var(--white);\\n  font-size: 12px; }\\n\\ninput.custom-form-input::placeholder {\\n  font-weight: 100;\\n  color: var(--white);\\n  font-size: 12px; }\\n\\n.error-text {\\n  color: var(--white);\\n  font-weight: 300; }\\n\\n.button-row button {\\n  height: 40px;\\n  font-weight: 300;\\n  outline: none;\\n  color: var(--white);\\n  border: none;\\n  background-color: transparent;\\n  cursor: pointer;\\n  text-transform: uppercase; }\\n\\n.button-row button:hover {\\n  background-color: #292929;\\n  border: none;\\n  border-radius: 0; }\\n\\n.button-row button:active,\\n.button-row button:focus {\\n  box-shadow: none; }\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppService } from '../../app.service';\n\n@Component({\n    selector: 'app-account-credentials',\n    templateUrl: './account-credentials.component.html',\n    styleUrls: ['./account-credentials.component.scss'],\n})\nexport class AppAccountCredentialsComponent {\n    public amiUserData = {\n        username: '',\n        password: '',\n    };\n\n    public fields = {\n        USERNAME: 'username',\n        PASSWORD: 'password',\n        REPEAT_PASSWORD: 'repeatPassword',\n    };\n\n    public repeatPassword: '';\n    public isIdentical: boolean;\n    public errorMessage: '';\n    public isSubmitted = false;\n\n    constructor(private router: Router, public appService: AppService) {\n    }\n\n    /**\n     * Trim whitespaces in fields\n     * @param event - User keyup event\n     * @param {string} field - Name of active input filed\n     */\n    onKey(event: any, field: string) {\n        switch(field) {\n            case this.fields.USERNAME: {\n                this.amiUserData.username = event.target.value.trim();\n                break;\n            }\n\n            case this.fields.PASSWORD: {\n                this.amiUserData.password = event.target.value.trim();\n                break;\n            }\n\n            case this.fields.REPEAT_PASSWORD: {\n                this.repeatPassword = event.target.value.trim();\n                break;\n            }\n        }\n        this.isSubmitted = false;\n        this.errorMessage = '';\n    }\n\n    /**\n     * Checks password fields for identical\n     */\n    public onPasswordChange(): void {\n        this.isIdentical = this.amiUserData.password === this.repeatPassword;\n    }\n\n    /**\n     * Send a request and navigate to success page if response is success\n     * @returns {boolean | void} boolean - result of matching password fields\n     */\n    public submit(isError): (boolean | void) {\n        this.isSubmitted = true;\n        this.onPasswordChange();\n        if (!this.isIdentical) { return false; }\n        if (isError) return;\n        this.appService.checkUserData(this.amiUserData).then(() => {\n            this.router.navigate(['success-page']);\n        }).catch( (err) => {\n            this.errorMessage = err.error.title ? err.error.title : err.statusText;\n        });\n    }\n}\n","module.exports = \"<div class=\\\"container-fluid header\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-4 col-5 border-right\\\">\\n            <div class=\\\"container-fluid\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-2\\\">\\n                        <img src=\\\"./assets/pmm-logo.png\\\" class=\\\"header-logo\\\" alt=\\\"pmm-logo\\\">\\n                    </div>\\n                    <div class=\\\"col-10\\\">Percona Monitoring and Management</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-xl-8 col-7\\\">\\n            <p>Installation <i class=\\\"fa fa-long-arrow-right\\\"></i> AMI</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"container main\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-10 offset-xl-1 col-12\\\">\\n            <p class=\\\"text-center\\\">PMM Installation Wizard</p>\\n            <section>\\n                <ul class=\\\"nav nav-tabs gf-tabs\\\">\\n                    <li class=\\\"nav-item gf-tabs-item\\\" routerLinkActive=\\\"active\\\"><a routerLink=\\\"instance-id\\\">Instance ID\\n                        Verification</a>\\n                    </li>\\n                    <li><i class=\\\"fa fa-long-arrow-right\\\"></i></li>\\n                    <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\"><a routerLink=\\\"account-credentials\\\">Account\\n                        Credentials</a></li>\\n                </ul>\\n                <div class=\\\"tab-content table-panel-wrapper\\\">\\n                    <router-outlet></router-outlet>\\n                </div>\\n            </section>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"body {\\n  background-color: #141414; }\\n\\n.header {\\n  height: 50px;\\n  margin-bottom: 90px;\\n  color: #cccccc;\\n  background-color: #292929; }\\n\\n.header div {\\n  height: inherit; }\\n\\n.header .row > div {\\n  display: flex;\\n  align-items: center; }\\n\\n.header p {\\n  margin-bottom: 0; }\\n\\n.header .border-right {\\n  border-right: 1px solid #141414 !important; }\\n\\n.header .header-logo {\\n  width: 35px;\\n  height: 35px; }\\n\\n.main p {\\n  font-weight: 300;\\n  color: #ffffff;\\n  margin-bottom: 25px; }\\n\\n.main .nav-tabs {\\n  border: none;\\n  padding: 0;\\n  margin: 0; }\\n\\n.main .nav-tabs > li.active {\\n  border-bottom: 5px solid #292929; }\\n\\n.main .nav-tabs > li.active > a,\\n.main .nav-tabs > li.active > a:focus,\\n.main .nav-tabs > li.active > a:hover,\\n.main .nav-tabs > li > a,\\n.main .nav-tabs > li > a:focus,\\n.main .nav-tabs > li > a:hover,\\n.main .nav-tabs > li > i {\\n  padding: 10px 15px 5px;\\n  display: block;\\n  background-color: transparent;\\n  border: none;\\n  color: white;\\n  font-weight: 300;\\n  text-decoration: none; }\\n\\n.main .tab-content {\\n  padding-top: 85px;\\n  padding-bottom: 60px;\\n  border: 1px solid #2a2a2a;\\n  background-color: #1f1d1e; }\\n\\n@media screen and (max-width: 768px) {\\n  .main p {\\n    font-size: 14px; }\\n  .tab-content {\\n    padding-top: 40px;\\n    padding-bottom: 40px; } }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-add-ami',\n  templateUrl: './ami.component.html',\n  styleUrls: ['./ami.component.scss']\n})\nexport class AppAmiInstallationComponent {\n\n  constructor() { }\n}\n","module.exports = \"<div class=\\\"tab-pane\\\">\\n  <div class=\\\"row\\\">\\n    <p\\n      class=\\\"text-center col-xl-8 col-10 offset-xl-2 offset-1\\\">\\n      Please provide the Amazon Instance ID (AMI ID) from the AWS Console. It uses the format of i-abc123def.</p>\\n  </div>\\n  <form action=\\\"\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xl-8 col-10 offset-xl-3 offset-1 input-wrapper\\\">\\n        <div class=\\\"row flex-column-reverse flex-xl-row align-items-center\\\">\\n          <div class=\\\"col-xl-9 col-12 text-right\\\">\\n            <input type=\\\"text\\\" class=\\\"custom-form-input form-control\\\" placeholder=\\\"Instance ID\\\"\\n                   name=\\\"instance-id\\\"\\n                   [(ngModel)]=\\\"instanceId\\\"\\n                   #id=\\\"ngModel\\\"\\n                   pattern=\\\"^i-[0-9a-f]+$\\\"\\n                   (keyup)=\\\"onKey($event)\\\"\\n                   required>\\n          </div>\\n          <div class=\\\"col-xl-3 col-12 pl-xl-0\\\">\\n            <a href=\\\"javascript:;\\\" class=\\\"modal-link\\\" (click)=\\\"toggleModal()\\\">Where should I get my\\n              Instance\\n              ID?</a>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div *ngIf=\\\"id?.errors && isSubmitted\\\" class=\\\"col-xl-9 col-xs-12\\\">\\n            <div *ngIf=\\\"id?.errors?.required\\\" class=\\\"error-text\\\">*Field is required</div>\\n            <div *ngIf=\\\"id?.errors?.pattern\\\" class=\\\"error-text\\\">*Must be correct instance id</div>\\n          </div>\\n            <div *ngIf=\\\"errorMessage\\\" class=\\\"error-text col-xl-9 col-xs-12\\\">*{{ errorMessage }}</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xl-9 col-12 text-right button-row\\\">\\n            <button class=\\\"btn btn-primary\\\"\\n                    (click)=\\\"submit(!id?.valid)\\\">Submit\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n<div class=\\\"backdrop\\\" [class.active]=\\\"isOpenModal\\\">\\n</div>\\n<div class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" [class.active]=\\\"isOpenModal\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\" id=\\\"instance-modal\\\">\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"d-flex justify-content-between\\\">\\n          <h2>Where to get your instance ID</h2>\\n          <i class=\\\"fa fa-close text-right close-icon\\\" (click)=\\\"toggleModal()\\\"></i>\\n        </div>\\n        <p>You can copy the instance ID in the Properties panel of your instance, select the Description tab back in\\n          the <b>EC2 console</b>. Click the Copy button next to the Instance ID field. This button appears as soon\\n          as you hover the cursor of your mouse over the ID.</p>\\n        <div>\\n          <img src=\\\"./assets/id-instruction-img.png\\\" alt=\\\"instruction-image\\\">\\n          <p><em>Hover the cursor over instance ID for Copy button to appear.</em></p>\\n        </div>\\n        <p>Paste the instance in the Instance ID field of the Percona Monitoring and Management welcome page and\\n          click Submit.</p>\\n        <a class=\\\"modal-button btn btn-primary\\\" (click)=\\\"toggleModal()\\\">Got it, thanks</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \".active {\\n  display: flex !important; }\\n\\n.input-wrapper > div {\\n  margin-bottom: 15px; }\\n\\n.tab-pane p {\\n  margin-bottom: 25px;\\n  color: var(--white);\\n  font-weight: 300;\\n  font-size: 0.9rem; }\\n\\ninput.custom-form-input {\\n  height: 38px;\\n  color: var(--white);\\n  font-weight: 300;\\n  border-radius: 0;\\n  border: 1px solid #2a2a2a;\\n  background-color: #292929; }\\n\\ninput.custom-form-input::-webkit-input-placeholder {\\n  font-weight: 100;\\n  color: var(--white);\\n  font-size: 12px; }\\n\\ninput.custom-form-input:-ms-input-placeholder {\\n  font-weight: 100;\\n  color: var(--white);\\n  font-size: 12px; }\\n\\ninput.custom-form-input::-ms-input-placeholder {\\n  font-weight: 100;\\n  color: var(--white);\\n  font-size: 12px; }\\n\\ninput.custom-form-input::placeholder {\\n  font-weight: 100;\\n  color: var(--white);\\n  font-size: 12px; }\\n\\n.error-text {\\n  color: white;\\n  font-weight: 300; }\\n\\n.modal-link {\\n  color: #ff7941;\\n  font-size: 12px;\\n  text-decoration: none; }\\n\\n.modal-link:hover {\\n  color: #ff7941;\\n  text-decoration: underline; }\\n\\n.button-row button {\\n  height: 40px;\\n  font-weight: 300;\\n  outline: none;\\n  color: var(--white);\\n  border: none;\\n  background-color: transparent;\\n  cursor: pointer;\\n  text-transform: uppercase; }\\n\\n.button-row button:hover {\\n  background-color: #292929;\\n  border: none;\\n  border-radius: 0; }\\n\\n.button-row button:active,\\n.button-row button:focus {\\n  box-shadow: none; }\\n\\n.backdrop {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100vh;\\n  background-color: rgba(0, 0, 0, 0.6);\\n  display: none; }\\n\\n.modal-dialog {\\n  max-width: 680px;\\n  width: 100%;\\n  margin: auto; }\\n\\n#instance-modal {\\n  margin: 15px;\\n  color: var(--white);\\n  font-weight: 300;\\n  background-color: #1f1d1d; }\\n\\n#instance-modal p {\\n  font-size: 1em; }\\n\\n#instance-modal .modal-body > *:not(.modal-button) {\\n  margin-bottom: 40px; }\\n\\n#instance-modal .close-icon {\\n  font-size: 16px;\\n  cursor: pointer; }\\n\\n#instance-modal .modal-img {\\n  background: url('pmm-logo.png') no-repeat;\\n  background-size: cover; }\\n\\n#instance-modal .modal-flex-container {\\n  display: flex;\\n  justify-content: space-between; }\\n\\n#instance-modal .btn-primary.modal-button {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  cursor: pointer;\\n  height: 40px;\\n  width: 150px;\\n  padding: 0;\\n  color: var(--white);\\n  font-weight: 300;\\n  outline: none;\\n  text-transform: uppercase;\\n  background-color: transparent;\\n  border: none; }\\n\\n#instance-modal .btn-primary.modal-button:hover {\\n  background-color: #292929;\\n  border: none;\\n  border-radius: 0; }\\n\\n@media screen and (max-width: 1200px) {\\n  .modal-link {\\n    display: block;\\n    margin-bottom: 10px; } }\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppService } from '../../app.service';\n\n@Component({\n    selector: 'app-instance-id',\n    templateUrl: './instance-id.component.html',\n    styleUrls: ['./instance-id.component.scss'],\n})\nexport class AppInstanceIdComponent {\n    public instanceId = '';\n    public isOpenModal = false;\n    public errorMessage: '';\n    public isSubmitted = false;\n\n    constructor(private router: Router, public appService: AppService) {\n    }\n\n    /**\n     * Show modal dialog with instructions of getting instance id\n     */\n    public toggleModal(): void {\n        this.isOpenModal = !this.isOpenModal;\n    }\n\n    /**\n     * Trim whitespaces in instance id input field\n     * @param event - User keyup event\n     */\n    onKey(event: any) {\n        this.instanceId = event.target.value.trim();\n        this.isSubmitted = false;\n        this.errorMessage = '';\n    }\n\n    /**\n     * Send a request and navigate to success page if response is success\n     */\n    public submit(isError): void {\n        this.isSubmitted = true;\n        if (isError) return;\n        this.appService.checkInstanceId(this.instanceId).then(() => {\n            this.router.navigate(['ami/account-credentials']);\n        }).catch( (err) => {\n            this.errorMessage = err.error.title ? err.error.title : err.statusText;\n        });\n    }\n}\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor() { }\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { AppRouter } from './app.router';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { AppAmiInstallationComponent } from './ami/ami.component';\nimport { AppOvfComponent } from './ovf/ovf.component';\nimport { AppInstanceIdComponent } from './ami/instance-id/instance-id.component';\nimport { AppAccountCredentialsComponent } from './ami/account-credentials/account-credentials.component';\nimport { AppAccountCredentialsOvfComponent } from './ovf/account-credentials-ovf/account-credentials-ovf.component';\nimport { AppSuccessPageComponent } from './success-page/success-page.component';\nimport { AmiCredentialsGuard, AmiGuard } from './guards/ami.guard';\nimport { OvfGuard } from './guards/ovf.guard';\nimport { AppService } from './app.service';\nimport { MainGuard } from './guards/main.guard';\nimport { AppDockerPageComponent } from './docker-page/docker-page.component';\nimport { SuccessPageGuard } from './guards/success-page.guard';\nimport { DockerGuard } from \"./guards/docker.guard\";\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        AppAmiInstallationComponent,\n        AppInstanceIdComponent,\n        AppAccountCredentialsComponent,\n        AppOvfComponent,\n        AppAccountCredentialsOvfComponent,\n        AppSuccessPageComponent,\n        AppDockerPageComponent,\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        RouterModule.forRoot(AppRouter),\n        FormsModule,\n    ],\n    exports: [\n        AppComponent,\n    ],\n    providers: [MainGuard, AmiGuard, AmiCredentialsGuard, OvfGuard, SuccessPageGuard, DockerGuard, AppService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Routes } from '@angular/router';\nimport { AppAmiInstallationComponent } from './ami/ami.component';\nimport { AppInstanceIdComponent } from './ami/instance-id/instance-id.component';\nimport { AppAccountCredentialsComponent } from './ami/account-credentials/account-credentials.component';\nimport { AppOvfComponent } from './ovf/ovf.component';\nimport { AppAccountCredentialsOvfComponent } from './ovf/account-credentials-ovf/account-credentials-ovf.component';\nimport { AppSuccessPageComponent } from './success-page/success-page.component';\nimport { AmiCredentialsGuard, AmiGuard } from './guards/ami.guard';\nimport { OvfGuard } from './guards/ovf.guard';\nimport { AppComponent } from './app.component';\nimport { MainGuard } from './guards/main.guard';\nimport { AppDockerPageComponent } from './docker-page/docker-page.component';\nimport { SuccessPageGuard } from './guards/success-page.guard';\nimport { DockerGuard } from './guards/docker.guard';\n\nexport const AppRouter: Routes = [\n    { path: '', children: [\n            {\n                path: '',\n                component: AppComponent, canActivate: [MainGuard]\n            },\n            {\n                path: 'ovf', component: AppOvfComponent, canActivate: [OvfGuard], children: [\n                    { path: 'account-credentials-ovf', component: AppAccountCredentialsOvfComponent },\n                    { path: '', redirectTo: 'account-credentials-ovf', pathMatch: 'full' },\n                ]\n            },\n            {\n                path: 'ami', component: AppAmiInstallationComponent, canActivate: [AmiGuard], children: [\n                    { path: 'instance-id', component: AppInstanceIdComponent },\n                    { path: 'account-credentials', component: AppAccountCredentialsComponent, canActivate: [AmiCredentialsGuard] },\n                    { path: '', redirectTo: 'instance-id', pathMatch: 'full' },\n                ]\n            },\n        ]\n    },\n    { path: 'docker', component: AppDockerPageComponent, canActivate: [DockerGuard] },\n    { path: 'success-page', component: AppSuccessPageComponent, canActivate: [SuccessPageGuard] }\n];\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\n\ninterface UserCredentials {\n    username: string;\n    password: string;\n    instanceId?: string;\n}\n\n@Injectable()\nexport class AppService {\n    private headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    private url = '/configurator/v1/users';\n    private instanceUrl = '/configurator/v1/check-instance';\n    private sshUrl = '/configurator/v1/sshkey';\n    private data = <any>{};\n    _isInstanceChecked = false;\n    _isInstallationComplete = false;\n\n    constructor(private http: HttpClient) {\n    }\n\n    /**\n     * Check installation completing for guards\n     * @returns {boolean} - result of checking instance id\n     */\n    public isInstallationComplete() {\n        return this._isInstallationComplete;\n    }\n\n    /**\n     * Check installation completing for guards\n     * @returns {boolean} - result of checking instance id\n     */\n    public isInstanceChecked() {\n        return this._isInstanceChecked;\n    }\n\n    /**\n     * Send user data\n     * @param {UserCredentials} credentials - username and password\n     * @returns {Promise<{}>} - result of matching credentials\n     */\n    checkUserData(credentials: UserCredentials): Promise<any> {\n        this.data.Username = credentials.username;\n        this.data.Password = credentials.password;\n\n        return this.http\n            .post(this.url, this.data, { headers: this.headers })\n            .toPromise()\n            .then(() => this._isInstallationComplete = true);\n    }\n\n    /**\n     * Send instance id\n     * @param {string} instanceId - instance of user id\n     * @returns {Promise<{}>} - result of matching instanceId\n     */\n    checkInstanceId(instanceId: string): Promise<any> {\n        this.data.Instance = instanceId;\n        return this.http\n            .post(this.instanceUrl, { instanceId }, { headers: this.headers })\n            .toPromise()\n            .then(() => this._isInstanceChecked = true);\n    }\n\n    /**\n     * Send ssh\n     * @param {string} ssh - ssh\n     * @returns {Promise<{}>} - result of matching ssh\n     */\n    checkSSH(ssh: string): Promise<any> {\n        return this.http\n            .post(this.sshUrl, { key: ssh }, { headers: this.headers })\n            .toPromise();\n    }\n\n}\n","module.exports = \"<div class=\\\"container-fluid header\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-4 col-5 border-right\\\">\\n            <div class=\\\"container-fluid\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-2\\\">\\n                        <img src=\\\"./assets/pmm-logo.png\\\" class=\\\"header-logo\\\" alt=\\\"pmm-logo\\\">\\n                    </div>\\n                    <div class=\\\"col-10\\\">Percona Monitoring and Management</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-xl-8 col-7\\\">\\n            <p>Installation docker</p>\\n        </div>\\n    </div>\\n</div>\\n<p class=\\\"text-center\\\">\\n    Please use pmm-server options for docker <a\\n        href=\\\"https://www.percona.com/doc/percona-monitoring-and-management/glossary.option.html#pmm-glossary-pmm-server-additional-option\\\"\\n        target=\\\"_blank\\\">read more here</a>\\n</p>\\n\\n\"","module.exports = \".header {\\n  height: 50px;\\n  margin-bottom: 90px;\\n  color: #cccccc;\\n  background-color: #292929; }\\n\\n.header div {\\n  height: inherit; }\\n\\n.header .row > div {\\n  display: flex;\\n  align-items: center; }\\n\\n.header p {\\n  margin-bottom: 0; }\\n\\n.header .border-right {\\n  border-right: 1px solid #141414 !important; }\\n\\n.header .header-logo {\\n  width: 35px;\\n  height: 35px; }\\n\\np {\\n  color: var(--white);\\n  font-size: 0.9rem; }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-docker-page',\n  templateUrl: './docker-page.component.html',\n  styleUrls: ['./docker-page.component.scss']\n})\nexport class AppDockerPageComponent {\n\n  constructor() { }\n}\n","import {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    RouterStateSnapshot\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AppService } from '../app.service';\nimport { environment } from '../../environments/environment';\n\nexport class AmiGuard implements CanActivate {\n    INSTALLATION_TYPE = 'ami';\n\n    constructor() { }\n\n    /**\n     * Check on resolution for ami route\n     */\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return environment.installationType === this.INSTALLATION_TYPE;\n    }\n}\n\n@Injectable()\nexport class AmiCredentialsGuard implements CanActivate {\n    constructor(private appService: AppService) {\n    }\n\n    /**\n     * Check on resolution for ami children account credentials route\n     */\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.appService.isInstanceChecked();\n    }\n}\n","import {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    RouterStateSnapshot\n} from '@angular/router';\nimport { environment } from '../../environments/environment';\n\nexport class DockerGuard implements CanActivate {\n    INSTALLATION_TYPE = 'docker';\n\n    constructor() { }\n\n    /**\n     * Check resolution for ovf route\n     */\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return environment.installationType === this.INSTALLATION_TYPE;\n    }\n}\n","import {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    RouterStateSnapshot,\n    Router\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\nenum Installation {\n    AMI = 'ami',\n    OVF = 'ovf',\n    DOCKER = 'docker'\n}\n\n@Injectable()\nexport class MainGuard implements CanActivate {\n\n    constructor(private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        switch (environment.installationType) {\n            case Installation.AMI:\n                this.router.navigate(['ami']);\n                break;\n            case Installation.OVF:\n                this.router.navigate(['ovf']);\n                break;\n            case Installation.DOCKER:\n                this.router.navigate(['docker']);\n                break;\n        }\n\n        return false;\n    }\n}\n","import {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    RouterStateSnapshot\n} from '@angular/router';\nimport { environment } from '../../environments/environment';\n\nexport class OvfGuard implements CanActivate {\n    INSTALLATION_TYPE = 'ovf';\n\n    constructor() { }\n\n    /**\n     * Check resolution for ovf route\n     */\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return environment.installationType === this.INSTALLATION_TYPE;\n    }\n}\n","import {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    RouterStateSnapshot\n} from '@angular/router';\nimport { AppService } from '../app.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SuccessPageGuard implements CanActivate {\n    constructor(private appService: AppService) { }\n\n    /**\n     * Check resolution for success page router link\n     */\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.appService.isInstallationComplete();\n    }\n}\n","module.exports = \"<div class=\\\"tab-pane\\\">\\n  <div class=\\\"row\\\">\\n    <p class=\\\"text-center col-8 offset-2\\\">Create your\\n      username and password to access your PMM</p>\\n  </div>\\n  <form>\\n    <div class=\\\"row\\\">\\n      <div\\n        class=\\\"col-10 offset-xl-2 offset-1 input-wrapper\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xl-9 col-12 text-right\\\">\\n            <input type=\\\"text\\\" class=\\\"custom-form-input form-control ng-untouched ng-pristine ng-valid\\\"\\n                   placeholder=\\\"Username\\\"\\n                   name=\\\"{{fields.USERNAME_OVF}}\\\"\\n                   [(ngModel)]=\\\"ovfUserData.username\\\"\\n                   #user=\\\"ngModel\\\"\\n                   (keyup)=\\\"onKey($event, fields.USERNAME_OVF)\\\"\\n                   required>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div *ngIf=\\\"user?.errors && isSubmitted\\\"\\n               class=\\\"col-xl-9 col-12 error-text\\\">\\n            <div *ngIf=\\\"user?.errors?.required\\\">*Field is required</div>\\n          </div>\\n          <div *ngIf=\\\"errorMessage\\\" class=\\\"error-text col-xl-9 col-xs-12\\\">*{{ errorMessage }}</div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xl-9 col-12 text-right\\\">\\n            <input type=\\\"password\\\" class=\\\"custom-form-input form-control ng-untouched ng-pristine ng-valid\\\"\\n                   placeholder=\\\"Password\\\"\\n                   name=\\\"{{ fields.PASSWORD_OVF }}\\\"\\n                   [(ngModel)]=\\\"ovfUserData.password\\\"\\n                   #pass=\\\"ngModel\\\"\\n                   (keyup)=\\\"onKey($event, fields.PASSWORD_OVF)\\\"\\n                   maxlength=\\\"255\\\"\\n                   required>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div *ngIf=\\\"pass?.errors && isSubmitted\\\"\\n               class=\\\"col-xl-9 col-12 error-text\\\">\\n            <div *ngIf=\\\"pass?.errors?.required\\\">*Field is required</div>\\n            <div *ngIf=\\\"pass?.errors?.maxlength\\\">*Field can not me more than 255 characters</div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xl-9 col-12 text-right\\\">\\n            <input type=\\\"password\\\" class=\\\"custom-form-input form-control ng-untouched ng-pristine ng-valid\\\"\\n                   placeholder=\\\"Repeat Password\\\"\\n                   name=\\\"{{ fields.REPEAT_PASSWORD_OVF }}\\\"\\n                   [(ngModel)]=\\\"repeatPassword\\\"\\n                   #repeatpass=\\\"ngModel\\\"\\n                   (keyup)=\\\"onKey($event, fields.REPEAT_PASSWORD_OVF)\\\"\\n                   required>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div *ngIf=\\\"repeatpass?.errors && isSubmitted\\\"\\n               class=\\\"col-xl-9 col-12 error-text\\\">\\n            <div *ngIf=\\\"repeatpass?.errors?.required\\\">*Field is required</div>\\n          </div>\\n          <div *ngIf=\\\"!isIdentical && isSubmitted\\\" class=\\\"col-lg-9 col-md-9 col-sm-12 error-text\\\">*Passwords must be identical</div>\\n        </div>\\n        <div class=\\\"row flex-container row-ssh\\\">\\n          <div class=\\\"col-xl-9 col-12 text-right\\\">\\n            <input type=\\\"text\\\" class=\\\"custom-form-input form-control ng-untouched ng-pristine ng-valid\\\"\\n                   placeholder=\\\"SSH Key\\\"\\n                   name=\\\"{{ fields.SSH_OVF }}\\\"\\n                   [(ngModel)]=\\\"ssh\\\"\\n                   (keyup)=\\\"onKey($event, fields.SSH_OVF)\\\">\\n          </div>\\n          <div class=\\\"col-xl-3 col-12 input-caption font-italic\\\">\\n            <span>*optional</span>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div *ngIf=\\\"errorMessageSsh\\\" class=\\\"error-text col-xl-9 col-xs-12\\\">*{{ errorMessageSsh }}</div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xl-9 col-12 text-right button-row\\\">\\n            <button type=\\\"reset\\\" class=\\\"btn btn-primary\\\">Reset</button>\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"submit(!user?.valid || !pass?.valid || !repeatpass?.valid)\\\">\\n              Submit\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","module.exports = \".input-wrapper > div {\\n  margin-bottom: 15px; }\\n\\n.tab-pane p {\\n  margin-bottom: 25px;\\n  color: white;\\n  font-weight: 300;\\n  font-size: 0.9rem; }\\n\\ninput.custom-form-input {\\n  height: 38px;\\n  color: white;\\n  font-weight: 300;\\n  border-radius: 0;\\n  border: 1px solid #2a2a2a;\\n  background-color: #292929; }\\n\\ninput.custom-form-input::-webkit-input-placeholder {\\n  font-weight: 100;\\n  color: white;\\n  font-size: 12px; }\\n\\ninput.custom-form-input:-ms-input-placeholder {\\n  font-weight: 100;\\n  color: white;\\n  font-size: 12px; }\\n\\ninput.custom-form-input::-ms-input-placeholder {\\n  font-weight: 100;\\n  color: white;\\n  font-size: 12px; }\\n\\ninput.custom-form-input::placeholder {\\n  font-weight: 100;\\n  color: white;\\n  font-size: 12px; }\\n\\n.input-wrapper .row-ssh {\\n  margin-top: 40px;\\n  margin-bottom: 40px; }\\n\\n.flex-container {\\n  display: flex;\\n  align-items: center; }\\n\\n.error-text {\\n  font-weight: 300;\\n  color: white; }\\n\\n.input-caption {\\n  padding-left: 0;\\n  color: white; }\\n\\n.button-row button {\\n  height: 40px;\\n  font-weight: 300;\\n  outline: none;\\n  color: white;\\n  border: none;\\n  background-color: transparent;\\n  cursor: pointer;\\n  text-transform: uppercase; }\\n\\n.button-row button:hover {\\n  background-color: #292929;\\n  border: none;\\n  border-radius: 0; }\\n\\n@media screen and (max-width: 1200px) {\\n  .flex-container {\\n    display: flex;\\n    flex-direction: column-reverse;\\n    align-items: flex-start;\\n    justify-content: flex-start; }\\n  .input-caption {\\n    padding-left: 15px; }\\n  .input-caption span {\\n    display: block;\\n    margin-bottom: 10px; } }\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppService } from '../../app.service';\n\n@Component({\n    selector: 'app-account-credentials-ovf',\n    templateUrl: './account-credentials-ovf.component.html',\n    styleUrls: ['./account-credentials-ovf.component.scss'],\n})\nexport class AppAccountCredentialsOvfComponent {\n    public ovfUserData = {\n        username: '',\n        password: '',\n    };\n\n    public fields = {\n        USERNAME_OVF: 'usernameOvf',\n        PASSWORD_OVF: 'passwordOvf',\n        REPEAT_PASSWORD_OVF: 'repeatPasswordOvf',\n        SSH_OVF: 'ssh'\n    };\n\n    public ssh = '';\n    public repeatPassword = '';\n    public isIdentical: boolean;\n    public errorMessage: '';\n    public errorMessageSsh: '';\n    public isSubmitted = false;\n\n    constructor(private router: Router, public appService: AppService) {\n    }\n\n    /**\n     * Trim whitespaces in fields\n     * @param event - User keyup event\n     * @param {string} field - Name of active input filed\n     */\n    onKey(event: any, field: string) {\n        switch(field) {\n            case this.fields.USERNAME_OVF: {\n                this.ovfUserData.username = event.target.value.trim();\n                break;\n            }\n\n            case this.fields.PASSWORD_OVF: {\n                this.ovfUserData.password = event.target.value.trim();\n                break;\n            }\n\n            case this.fields.REPEAT_PASSWORD_OVF: {\n                this.repeatPassword = event.target.value.trim();\n                break;\n            }\n\n            case this.fields.SSH_OVF: {\n                this.ssh = event.target.value.trim();\n                break;\n            }\n        }\n        this.isSubmitted = false;\n        this.errorMessage = '';\n    }\n\n    /**\n     * Check passwords fields for identical\n     */\n    public onPasswordChange(): void {\n        this.isIdentical = this.ovfUserData.password === this.repeatPassword;\n    }\n\n    /**\n     * Send a request and navigate to success page if response is success\n     * @returns {boolean | void} boolean - result of matching password fields\n     */\n    public submit(isError): (boolean | void) {\n        this.isSubmitted = true;\n        this.onPasswordChange();\n        if (!this.isIdentical) {\n            return false;\n        }\n        if (isError) return;\n        this.appService.checkUserData(this.ovfUserData).then(() => {\n            if (this.ssh && this.ssh.length) return this.checkSSH();\n            else this.router.navigate(['success-page']);\n        }).catch((err) => {\n            this.errorMessageSsh = err.error.title ? err.error.title : err.statusText;\n        });\n    }\n\n    private checkSSH() {\n        this.appService.checkSSH(this.ssh)\n            .then(() => this.router.navigate(['success-page']))\n            .catch((err) => this.errorMessage = err.error.title ? err.error.title : err.statusText);\n    }\n}\n","module.exports = \"<div class=\\\"container-fluid header\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xl-4 col-5 border-right\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-2\\\">\\n            <img src=\\\"./assets/pmm-logo.png\\\" class=\\\"header-logo\\\" alt=\\\"pmm-logo\\\">\\n          </div>\\n          <div class=\\\"col-10\\\">Percona Monitoring and Management</div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-xl-8 col-7\\\">\\n      <p>Installation <i class=\\\"fa fa-long-arrow-right\\\"></i> OVF</p>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"container main\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xl-10 offset-xl-1 col-12\\\">\\n      <p class=\\\"text-center\\\">PMM Installation Wizard</p>\\n        <section>\\n          <ul class=\\\"nav nav-tabs\\\">\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\"><a routerLink=\\\"account-credentials-ovf\\\">Account\\n              Credentials</a></li>\\n          </ul>\\n          <div class=\\\"tab-content\\\">\\n              <router-outlet></router-outlet>\\n          </div>\\n        </section>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"body {\\n  background-color: #141414; }\\n\\n.header {\\n  height: 50px;\\n  margin-bottom: 90px;\\n  color: #cccccc;\\n  background-color: #292929; }\\n\\n.header div {\\n  height: inherit; }\\n\\n.header .row > div {\\n  display: flex;\\n  align-items: center; }\\n\\n.header p {\\n  margin-bottom: 0; }\\n\\n.header .border-right {\\n  border-right: 1px solid #141414 !important; }\\n\\n.header .header-logo {\\n  width: 35px;\\n  height: 35px; }\\n\\n.main {\\n  font-size: 14px; }\\n\\n.main p {\\n  font-weight: 300;\\n  color: var(--white);\\n  margin-bottom: 25px; }\\n\\n.main .nav-tabs {\\n  border: none;\\n  padding: 0;\\n  margin: 0; }\\n\\n.main .nav-tabs > li.active {\\n  border-bottom: 5px solid #292929; }\\n\\n.main .nav-tabs > li.active > a,\\n.main .nav-tabs > li.active > a:focus,\\n.main .nav-tabs > li.active > a:hover,\\n.main .nav-tabs > li > a,\\n.main .nav-tabs > li > a:focus,\\n.main .nav-tabs > li > a:hover,\\n.main .nav-tabs > li > i {\\n  background-color: transparent;\\n  border: none;\\n  color: white;\\n  font-weight: 300;\\n  text-decoration: none; }\\n\\n.main .nav-tabs > li > i {\\n  padding: 5px 10px 0; }\\n\\n.main .tab-content {\\n  padding-top: 85px;\\n  padding-bottom: 60px;\\n  border: 1px solid #2a2a2a;\\n  background-color: #1f1d1e; }\\n\\n@media screen and (max-width: 768px) {\\n  .main p {\\n    font-size: 14px; }\\n  .tab-content {\\n    padding-top: 40px;\\n    padding-bottom: 40px; } }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-ovf',\n  templateUrl: './ovf.component.html',\n  styleUrls: ['./ovf.component.scss']\n})\nexport class AppOvfComponent {\n\n  constructor() { }\n}\n","module.exports = \"<div class=\\\"header\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-4 col-5 border-right\\\">\\n            <div class=\\\"header-logo\\\"></div>\\n            <p>Percona Monitoring and Management</p>\\n        </div>\\n        <div class=\\\"col-xl-8 col-7\\\">\\n            <p>Installation</p>\\n        </div>\\n    </div>\\n</div>\\n<p class=\\\"text-center\\\">\\n    Congratulation! Your PMM is configured.\\n    Please click <span class=\\\"home-link\\\" (click)=\\\"goTo()\\\">here</span> or wait 5 sec to be redirected to the Index\\n    page\\n</p>\\n<p class=\\\"text-center\\\">\\n    <i class=\\\"fa fa-spinner\\\"></i>\\n</p>\\n\\n\"","module.exports = \".header {\\n  height: 50px;\\n  margin-bottom: 90px;\\n  color: #cccccc;\\n  background-color: #292929; }\\n\\n.header div {\\n  height: inherit; }\\n\\n.header .row > div {\\n  display: flex;\\n  align-items: center; }\\n\\n.header p {\\n  margin-bottom: 0; }\\n\\n.header .border-right {\\n  border-right: 1px solid #141414 !important; }\\n\\n.header .header-logo {\\n  float: left;\\n  width: 35px;\\n  height: 35px;\\n  margin: 0 10px;\\n  background: url('pmm-logo.png') no-repeat;\\n  background-size: cover; }\\n\\np {\\n  color: var(--white);\\n  font-size: 0.9rem; }\\n\\n> p {\\n  font-size: 16px; }\\n\\n.home-link {\\n  color: #007bff; }\\n\\n.home-link:hover {\\n  color: #007bff;\\n  text-decoration: underline; }\\n\\n.fa-spinner {\\n  font-size: 4em;\\n  -webkit-animation: spin 1500ms infinite linear;\\n  animation: spin 1500ms infinite linear; }\\n\\n@-webkit-keyframes spin {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(359deg);\\n    transform: rotate(359deg); } }\\n\\n@keyframes spin {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(359deg);\\n    transform: rotate(359deg); } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-success-page',\n    templateUrl: './success-page.component.html',\n    styleUrls: ['./success-page.component.scss']\n})\nexport class AppSuccessPageComponent implements OnInit {\n\n    constructor(private router: Router) { }\n\n    ngOnInit() {\n        this.redirectToMainPage();\n    }\n\n    /**\n     * Automatic redirect to installation page\n     */\n    goTo(): void {\n        window.location.replace('/');\n    }\n\n    public redirectToMainPage(): void {\n        setTimeout(() => {\n          this.goTo();\n        }, 5000);\n    }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n    production: false,\n    installationType: 'docker'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}